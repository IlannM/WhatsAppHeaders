//
//     Generated by classdumpios 1.0.2 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSLayoutManagerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WAExpandingTextViewAccessibility-Protocol.h"
#import "WAExpandingTextViewDelegate-Protocol.h"

@class NSArray, NSAttributedString, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, UIFont, UITapGestureRecognizer, UIView, WAExpandingTextView, WATextFormatter;
@protocol WAExpandingTextViewControllerDelegate;

@interface WAExpandingTextViewController : NSObject <NSLayoutManagerDelegate, UIGestureRecognizerDelegate, WAExpandingTextViewDelegate, WAExpandingTextViewAccessibility>
{
    unsigned long long _minimizedLineLimit;
    NSTextStorage *_textStorage;
    NSLayoutManager *_layoutManager;
    NSTextContainer *_textContainer;
    NSString *_truncatedText;
    WAExpandingTextView *_textView;
    _Bool _shouldChangeText;
    struct CGRect _expandRect;
    UITapGestureRecognizer *_tapGestureRecognizer;
    WATextFormatter *_textFormatter;
    NSArray *_accessibilityElements;
    _Bool _textViewIsAccessibilityElement;
    _Bool _expanded;
    _Bool _canShowLinks;
    _Bool _shouldOverrideTextColor;
    _Bool _tapTextViewToExpand;
    double _preferredHeight;
    NSAttributedString *_fullText;
    NSAttributedString *_expandPrompt;
    id <WAExpandingTextViewControllerDelegate> _delegate;
}

- (void).cxx_destruct;
- (void)addExpandGestureRecognizerToView:(id)arg1;
@property(retain, nonatomic) UIFont *baseFont;
@property(nonatomic) _Bool canShowLinks; // @synthesize canShowLinks=_canShowLinks;
@property(nonatomic) __weak id <WAExpandingTextViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSAttributedString *expandPrompt; // @synthesize expandPrompt=_expandPrompt;
- (double)expandTextView;
@property(copy, nonatomic) NSAttributedString *fullText; // @synthesize fullText=_fullText;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithMinimizedLineLimit:(unsigned long long)arg1 baseFont:(id)arg2;
- (id)initWithTextView:(id)arg1 minimizedLineLimit:(unsigned long long)arg2 baseFont:(id)arg3;
@property(nonatomic, getter=isExpanded) _Bool expanded; // @synthesize expanded=_expanded;
@property(readonly, nonatomic) _Bool isTextTruncated;
@property(nonatomic) double lineFragmentPadding;
- (double)minimizeTextView;
@property(nonatomic) _Bool nonExclusiveUserInteractionEnabled;
@property(nonatomic) double preferredHeight; // @synthesize preferredHeight=_preferredHeight;
- (void)setNeedsUpdateAccessibility;
@property(nonatomic) _Bool shouldOverrideTextColor; // @synthesize shouldOverrideTextColor=_shouldOverrideTextColor;
@property(nonatomic) _Bool tapTextViewToExpand; // @synthesize tapTextViewToExpand=_tapTextViewToExpand;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
@property(nonatomic) _Bool textViewIsAccessibilityElement; // @synthesize textViewIsAccessibilityElement=_textViewIsAccessibilityElement;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidUpdateWidth:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)textViewTapped:(id)arg1;
- (struct _NSRange)truncateText;
- (void)updateAccessibilityIfNecessary;
- (void)updatePreferredHeightAndText;
@property(readonly, nonatomic) UIView *view;
- (id)wa_accessibilityElementAtIndex:(long long)arg1;
- (long long)wa_accessibilityElementCount;
@property(readonly, nonatomic) NSArray *wa_accessibilityElements;
- (long long)wa_indexOfAccessibilityElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

