//
//     Generated by classdumpios 1.0.2 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <WAFoundation/WAViewController.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "MKMapViewDelegate-Protocol.h"
#import "WACardNavigationControllerDelegate-Protocol.h"
#import "WALiveLocationMenuTableViewControllerDelegate-Protocol.h"

@class CLGeocoder, CLLocation, CLLocationManager, MKCompassButton, MKMapView, NSArray, NSObject, NSString, WACardNavigationController, WAExpiredLiveLocationFooterView, WAFriendLocationAnnotation, WAInfoButton, WALocationData, WAMapButtonMenu, WANavigationBarTitleView, WAUserTrackingButton;
@protocol MKAnnotation;

@interface WAStaticLocationViewController : WAViewController <MKMapViewDelegate, CLLocationManagerDelegate, WACardNavigationControllerDelegate, WALiveLocationMenuTableViewControllerDelegate>
{
    WANavigationBarTitleView *_titleView;
    MKMapView *_mapView;
    unsigned long long _regionType;
    _Bool _mapAnnotationAdded;
    CLGeocoder *_geocoder;
    CLLocationManager *_locationManager;
    CLLocation *_currentLocation;
    _Bool _locationAuthorized;
    _Bool _isLiveLocation;
    WAFriendLocationAnnotation *_friendAnnotation;
    WAExpiredLiveLocationFooterView *_expiredLiveLocationFooterView;
    WAMapButtonMenu *_mapButtonMenu;
    WAInfoButton *_infoButton;
    WAUserTrackingButton *_userTrackingButton;
    WACardNavigationController *_navigationController;
    NSArray *_portraitConstraints;
    NSArray *_landscapeConstraints;
    _Bool _menuOpen;
    _Bool _isRenderingMapView;
    _Bool _shouldUpdateMapRegionAfterRenderingMapView;
    MKCompassButton *_compass;
    WALocationData *_locationData;
}

+ (id)newViewControllerForLocationInMessage:(id)arg1;
- (void).cxx_destruct;
- (void)activateLandscapeConstraints:(_Bool)arg1;
- (void)activatePortraitConstraints:(_Bool)arg1;
- (void)addMapAnnotationIfPossible;
- (void)addToolbar;
- (void)calculateExpectedTravelTime;
- (void)cardNavigationController:(id)arg1 opaqueFrameDidChange:(struct CGRect)arg2;
- (void)cardNavigationControllerDidPopLastViewController:(id)arg1;
- (void)changeUserTrackingModeAction:(id)arg1;
- (void)directionsToHere;
- (void)displayExpectedTravelTime:(double)arg1;
- (id)initWithLocationData:(id)arg1 expiredLiveLocation:(_Bool)arg2;
- (void)liveLocationMenuDidEnableTraffic:(_Bool)arg1;
- (void)liveLocationMenuMapTypeDidChange:(unsigned long long)arg1;
- (void)liveLocationMenuWillDismiss;
@property(readonly, nonatomic) NSObject<MKAnnotation> *locationAnnotation;
@property(readonly, nonatomic) WALocationData *locationData; // @synthesize locationData=_locationData;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)mapAction:(id)arg1;
- (void)mapTypeChanged:(id)arg1;
- (void)mapView:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)mapView:(id)arg1 didAddAnnotationViews:(id)arg2;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(_Bool)arg2;
- (void)mapViewWillStartRenderingMap:(id)arg1;
- (void)processLocationError:(id)arg1;
- (void)promptToOpenThirdPartyAppWithTitle:(id)arg1;
- (void)searchAction:(id)arg1;
- (void)showMenu:(id)arg1;
- (void)showPlaceInfoAction:(id)arg1;
- (void)updateConstraintsForCurrentOrientation;
- (void)updateLocationDataWithPlacemark:(id)arg1;
- (void)updateMapAnnotationWithCurrentLocation;
- (void)updateMapRegionAnimated:(_Bool)arg1;
- (void)updateMenuButton;
- (void)updateNavigationBarTitle;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)wa_applicationDidBecomeActive;
- (void)wa_applicationWillResignActive;
- (id)wa_previewActionItems;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

