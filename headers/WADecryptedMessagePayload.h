//
//     Generated by classdumpios 1.0.2 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, WAMessage, WAPBMessage, WASignalDecryptJournalId, WAUserJID, XMPPMessageStanza;

@interface WADecryptedMessagePayload : NSObject
{
    XMPPMessageStanza *_messageStanza;
    WAPBMessage *_protobufMessage;
    NSData *_plaintextData;
    WASignalDecryptJournalId *_journalID;
    int _encVersion;
    _Bool _decryptFailed;
    unsigned long long _notificationBehavior;
    CDUnknownBlockType _completion;
    unsigned long long _origin;
    WAMessage *_message;
}

- (void).cxx_destruct;
- (id)certificateSerial;
@property(readonly, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(readonly, nonatomic) _Bool decryptFailed; // @synthesize decryptFailed=_decryptFailed;
@property(readonly, nonatomic) int encVersion; // @synthesize encVersion=_encVersion;
- (id)initWithMessageStanza:(id)arg1 protobufMessage:(id)arg2 plaintextData:(id)arg3 journalID:(id)arg4 encVersion:(int)arg5 decryptFailed:(_Bool)arg6 notificationBehavior:(unsigned long long)arg7 origin:(unsigned long long)arg8 completion:(CDUnknownBlockType)arg9;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isHSM;
@property(readonly, nonatomic) WASignalDecryptJournalId *journalID; // @synthesize journalID=_journalID;
@property(retain, nonatomic) WAMessage *message; // @synthesize message=_message;
@property(readonly, nonatomic) XMPPMessageStanza *messageStanza; // @synthesize messageStanza=_messageStanza;
@property(readonly, nonatomic) unsigned long long notificationBehavior; // @synthesize notificationBehavior=_notificationBehavior;
@property(readonly, nonatomic) unsigned long long origin; // @synthesize origin=_origin;
@property(readonly, copy, nonatomic) NSData *plaintextData; // @synthesize plaintextData=_plaintextData;
@property(readonly, nonatomic) WAPBMessage *protobufMessage; // @synthesize protobufMessage=_protobufMessage;
@property(readonly, nonatomic) WAUserJID *senderUserJID;
- (double)triggeredBlockCooldownInterval;
- (id)triggeredBlockExpirationDate;
- (int)verificationLevel;

@end

