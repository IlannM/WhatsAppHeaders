//
//     Generated by classdumpios 1.0.2 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "WALocationSourceDelegate-Protocol.h"
#import "WAPersistentRequestManagerRegistering-Protocol.h"

@class CLLocation, CLLocationManager, NSDate, NSMutableDictionary, NSMutableSet, NSString, NSTimer, NSUserDefaults, WAChatManager, WAChatStorage, WALiveLocationReportingSession, WALocationSource, WALocationStorage, WALocationSubscription, WAMessagingService, WAMutableDictionary, WAPersistentRequestManager, WARateLimitedOperation, WARollingWindow, WASignalManager, WAWeakTimer, XMPPConnectionMain, XMPPNotificationStanza;

@interface WALiveLocationController : NSObject <WALocationSourceDelegate, WAPersistentRequestManagerRegistering>
{
    WAMutableDictionary *_retryCountForRecipient;
    WARateLimitedOperation *_sendRetryRateLimit;
    WARateLimitedOperation *_requestRetryRateLimit;
    WARateLimitedOperation *_locationUpdateRateLimit;
    XMPPNotificationStanza *_unackedKeyDistributionNotification;
    WAMutableDictionary *_unackedRetryKeyDistributionNotifications;
    WAWeakTimer *_stopReportingTimer;
    NSMutableSet *_retryDeniedFrom;
    WARollingWindow *_reportingRollingWindow;
    WARollingWindow *_sharingRollingWindow;
    long long _backoffStage;
    WALiveLocationReportingSession *_reportingSession;
    _Bool _sendPushBackoffWhenPossible;
    NSMutableSet *_subscribedToLocationUpdatesFrom;
    NSMutableSet *_webClientSubscribedToLocationUpdatesFrom;
    long long _reportLocationCount;
    double _pushBackoff;
    NSTimer *_finalLocationExpiredTimer;
    NSTimer *_backgroundLocationTimer;
    WALocationSubscription *_locationSourceSubscription;
    _Bool _scheduleUpdateLatestLocation;
    NSMutableDictionary *_significantLocationSubscriptions;
    NSMutableDictionary *_liveLocationTimers;
    CLLocationManager *_backgroundLocationManager;
    _Bool _haveLocationSubscribers;
    WAChatStorage *_chatStorage;
    WAChatManager *_chatManager;
    WALocationStorage *_locationStorage;
    WAMessagingService *_messagingService;
    WAPersistentRequestManager *_persistentRequestManager;
    WASignalManager *_signalManager;
    NSUserDefaults *_userDefaults;
    XMPPConnectionMain *_xmppConnection;
    CLLocation *_lastReportedLocation;
    NSString *_lastReportedLocationSource;
    NSDate *_reportingLocationEndDate;
    WALocationSource *_locationSource;
}

- (void).cxx_destruct;
- (void)allUsersDisabledLocationSharingInAllChats:(CDUnknownBlockType)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
@property(readonly, nonatomic) long long backoffStage;
- (void)beginSharingLocationUntil:(id)arg1 duration:(double)arg2 comment:(id)arg3 forContactJID:(id)arg4 initialLocation:(id)arg5 sender:(id)arg6 entrypoint:(long long)arg7 completion:(CDUnknownBlockType)arg8;
- (_Bool)canShareWithUserJIDs:(id)arg1;
@property(readonly, nonatomic) WAChatManager *chatManager; // @synthesize chatManager=_chatManager;
@property(readonly, nonatomic) WAChatStorage *chatStorage; // @synthesize chatStorage=_chatStorage;
- (void)checkLocationEligibilityOfUsers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteAllState;
- (void)didBlockUserJID:(id)arg1;
- (void)didReceiveChatWithLocationMessage:(id)arg1;
- (void)didSendLiveLocationMessage:(id)arg1 timeToGetLocation:(double)arg2;
- (void)e2eIdentityChanged:(id)arg1;
- (void)finalLocationRecipientsDidExpire:(id)arg1;
- (void)groupMembershipDidGrowInGroupWithJID:(id)arg1;
- (void)handleLocationUpdate:(id)arg1 fromUserJID:(id)arg2 chatJID:(id)arg3 timestamp:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (id)initWithChatStorage:(id)arg1 chatManager:(id)arg2 locationStorage:(id)arg3 messagingService:(id)arg4 persistentRequestManager:(id)arg5 signalManager:(id)arg6 userDefaults:(id)arg7 xmppConnection:(id)arg8;
@property(readonly) CLLocation *lastReportedLocation;
- (void)loadDeferredObjects;
- (void)locationKeyEligibilityDidChange:(id)arg1;
- (id)locationSenderMatchingChatAndUser:(id)arg1;
- (void)locationSharingDidEnd:(id)arg1;
- (_Bool)locationSharingDidEndForChatSession:(id)arg1 reason:(long long)arg2;
- (_Bool)locationSharingDidEndForMessage:(id)arg1 reason:(long long)arg2;
- (id)locationSharingEndDateForChatJID:(id)arg1;
- (void)locationSharingExpired:(id)arg1;
- (void)locationSharingWillExpireSoonish:(id)arg1;
- (void)locationSource:(id)arg1 didChangeAuthorization:(int)arg2;
- (void)locationSource:(id)arg1 didFailWithError:(id)arg2;
- (void)locationSource:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationSource:(id)arg1 locationDidChangeSignificantly:(id)arg2;
- (double)locationSourceDesiredAccuracy:(id)arg1;
@property(readonly, nonatomic) WALocationStorage *locationStorage; // @synthesize locationStorage=_locationStorage;
@property(readonly, nonatomic) WAMessagingService *messagingService; // @synthesize messagingService=_messagingService;
- (id)myCachedLocationInChatWithJID:(id)arg1;
- (void)performSaveAllDataStores;
@property(readonly, nonatomic) WAPersistentRequestManager *persistentRequestManager; // @synthesize persistentRequestManager=_persistentRequestManager;
- (id)prospectiveRecipientsForChatSession:(id)arg1;
- (void)registerHandlersForPersistentRequestManager:(id)arg1;
- (void)remotePushDidArriveWithTimestamp:(id)arg1;
- (void)reportLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setLocationSharingEndDate:(id)arg1 lastUpdate:(id)arg2 forUserAndChat:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)sharedObjectKeyForPersistentRequestManager:(id)arg1;
@property(readonly, nonatomic) WASignalManager *signalManager; // @synthesize signalManager=_signalManager;
- (void)startSendingLocationUpdatesForDuration:(double)arg1;
- (void)stopSendingLocationUpdates;
- (void)stopSharingLocationWithChat:(id)arg1 userOriginatedCancel:(_Bool)arg2;
- (void)stopSharingLocationWithChat:(id)arg1 userOriginatedCancel:(_Bool)arg2 webClientRequestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)subscribeToLocationUpdatesFromChatJID:(id)arg1 forWebClient:(_Bool)arg2 reportParticipants:(_Bool)arg3 includeMessageInParticipantInfo:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)unsubscribeFromLocationUpdatesForWebClient;
- (void)unsubscribeFromLocationUpdatesFromChatJID:(id)arg1 forWebClient:(_Bool)arg2 webClientRequestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
- (void)userDidLeaveGroup:(id)arg1;
- (void)userDisabledLocationSharing:(id)arg1 sequenceNumber:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)userDisabledLocationSharingInAllChats:(id)arg1 sequenceNumber:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)willChangeNumber;
- (void)willDeleteMessages:(id)arg1;
- (void)willRevokeMessages:(id)arg1;
@property(readonly, nonatomic) XMPPConnectionMain *xmppConnection; // @synthesize xmppConnection=_xmppConnection;
- (void)xmppConnectionStateDidChange:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

