//
//     Generated by classdumpios 1.0.2 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "WAStatusItemView.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WAMediaPlayerDelegate-Protocol.h"
#import "WAMediaTransferProgressViewDelegate-Protocol.h"
#import "WANoOpGestureRecognizerTouchDelegate-Protocol.h"

@class NSString, UIImage, UIImageView, UIScrollView, UIView, WAExactTimer, WAMediaPlayerBase, WAMediaTransferProgressView, WANoOpGestureRecognizer, WAStatusScrollView, WAStatusZoomableMediaItemVideoContent, WAWeakTimer;

@interface WAStatusZoomableMediaItemView : WAStatusItemView <UIScrollViewDelegate, UIGestureRecognizerDelegate, WAMediaPlayerDelegate, WAMediaTransferProgressViewDelegate, WANoOpGestureRecognizerTouchDelegate>
{
    UIImageView *_imageView;
    WAMediaPlayerBase *_mediaPlayer;
    UIImageView *_backgroundImageView;
    WAStatusScrollView *_scrollView;
    WAMediaTransferProgressView *_progressView;
    WAExactTimer *_showProgressViewTimer;
    struct CGSize _lastViewSize;
    _Bool _needsRecalculateZoom;
    long long _gestureID;
    long long _gestureIDForZoomOutWhenDraggingEnds;
    WANoOpGestureRecognizer *_noOpGestureRecognizer;
    WAWeakTimer *_longPressTimer;
    _Bool _isLongPressInProgress;
    _Bool _isZoomPanInteractionInProgress;
    struct CGSize _presentationSize;
    struct CGSize _zoomableContentSize;
}

+ (long long)maxVideoDuration;
+ (_Bool)needsVideoPlayer;
+ (_Bool)pausesTimerDuringInteractiveZoom;
- (void).cxx_destruct;
- (void)addDownloadProgressViewIfNeeded;
@property(retain, nonatomic) UIImage *backgroundImage;
- (void)didUpdateItem;
- (void)didUpdateVideoPlayerStatus;
- (void)didUpdateVideoPlayerStatusToStatus:(unsigned long long)arg1;
- (void)endInteractiveZoom;
- (void)endZoomPan;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
@property(retain, nonatomic) UIImage *image;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)isFinishedPresenting;
- (_Bool)isHandlingPanGesture;
- (_Bool)isMediaPlayerActive;
- (_Bool)isProgressViewHidden;
- (void)layoutProgressView;
- (void)layoutSubviews;
- (void)loadMediaPlayerItemIfNeeded;
- (double)loadTime;
- (void)longPressTimerDidFire;
- (_Bool)managingOwnTiming;
- (void)mediaPlayerDidBeginScrubbing:(id)arg1;
- (void)mediaPlayerDidChangeCurrentTime:(id)arg1;
- (void)mediaPlayerDidEndScrubbing:(id)arg1;
- (void)mediaPlayerDidFinishLoading:(id)arg1;
- (void)mediaPlayerDidPlayToEndTime:(id)arg1;
- (void)mediaPlayerDidRequestPlaybackStart:(id)arg1;
- (void)mediaPlayerStatusDidChange:(id)arg1;
- (void)mediaTransferProgressView:(id)arg1 didReceiveTapEvent:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool needsFNFVideoPlayerItem;
- (void)noOpGestureRecognizerDidBeginTrackingTouches:(id)arg1;
- (void)noOpGestureRecognizerDidEndTrackingTouches:(id)arg1;
- (void)noOpGestureRecognizerDidUpdateTrackedTouches:(id)arg1;
- (double)position;
- (void)prepareForReuse;
- (double)presentationTime;
- (void)recalculateZoomScale;
- (void)resizeZoomableImageIfNeeded;
- (void)rewind;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)setAudioMuted:(_Bool)arg1;
- (void)setNeedsRecalculateZoom;
- (void)setPaused:(_Bool)arg1;
- (void)setProgressViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setProgressViewTransferring:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct CGSize zoomableContentSize; // @synthesize zoomableContentSize=_zoomableContentSize;
- (void)startInteractiveZoom;
- (void)startZoomPan;
- (void)stopPlayback;
- (double)timeSpent;
@property(readonly, nonatomic) WAStatusZoomableMediaItemVideoContent *videoContent;
- (id)viewForZoomingInScrollView:(id)arg1;
@property(readonly, nonatomic) UIView *zoomableView;
@property(readonly, nonatomic) struct CGSize zoomableViewSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

